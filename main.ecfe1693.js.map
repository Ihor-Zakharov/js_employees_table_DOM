{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","theadChildren","children","tbody","sortBy","setAttribute","officeOptions","state","sortDirection","sort","selectedPerson","notifications","error","success","editedField","sortTable","sortedTbody","tbodyChildren","sortBodyString","sortBodyNumber","num","parseInt","replace","reverse","innerHTML","child","append","arr","childNumber","childA","childB","innerText","localeCompare","parsePattern","formatSalary","salary","salaryCopy","Number","toLocaleString","style","currency","addEventListener","e","target","tagName","dataset","sortby","closest","forEach","element","classList","add","remove","value","input","createElement","focus","salaryField","parentElement","lastElementChild","saveValue","inputParent","ev","key","newEmployeeForm","renderNotifications","stateNotifications","Object","entries","message","notofication","body","setTimeout","removeChild","method","action","map","option","toLowerCase","preventDefault","data","FormData","formData","fromEntries","age","nameValue","name","push","length","tr","values","td","reset"],"mappings":"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","file":"main.ecfe1693.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst thead = document.querySelector('thead');\r\nconst theadChildren = thead.children[0];\r\nconst tbody = document.querySelector('tbody');\r\nlet sortBy = '';\r\n\r\ntheadChildren.children[0].setAttribute('data-sortBy', 'name');\r\ntheadChildren.children[1].setAttribute('data-sortBy', 'position');\r\ntheadChildren.children[2].setAttribute('data-sortBy', 'office');\r\ntheadChildren.children[3].setAttribute('data-sortBy', 'age');\r\ntheadChildren.children[4].setAttribute('data-sortBy', 'salary');\r\n\r\nconst officeOptions = [\r\n  'Tokyo',\r\n  'Singapore',\r\n  'London',\r\n  'New York',\r\n  'Edinburgh',\r\n  'San Francisco',\r\n];\r\n\r\nconst state = {\r\n  sortDirection: 'asc',\r\n  sort: '',\r\n  selectedPerson: null,\r\n  notifications: {\r\n    error: [],\r\n    success: [],\r\n  },\r\n  editedField: null,\r\n};\r\n\r\nfunction sortTable() {\r\n  let sortedTbody = '';\r\n  const tbodyChildren = [...tbody.children];\r\n\r\n  switch (state.sort) {\r\n    case 'name':\r\n      sortedTbody = sortBodyString(tbodyChildren, 0);\r\n      break;\r\n\r\n    case 'position':\r\n      sortedTbody = sortBodyString(tbodyChildren, 1);\r\n      break;\r\n\r\n    case 'office':\r\n      sortedTbody = sortBodyString(tbodyChildren, 2);\r\n      break;\r\n\r\n    case 'age':\r\n      sortedTbody = sortBodyNumber(tbodyChildren, 3, (num) => parseInt(num));\r\n      break;\r\n\r\n    case 'salary':\r\n      sortedTbody = sortBodyNumber(tbodyChildren, 4, (num) =>\r\n        parseInt(num.replace(/\\$|,/g, ''))\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  if (state.sortDirection === 'desc') {\r\n    sortedTbody.reverse();\r\n  }\r\n\r\n  if (sortedTbody) {\r\n    tbody.innerHTML = '';\r\n\r\n    for (const child of sortedTbody) {\r\n      tbody.append(child);\r\n    }\r\n  }\r\n}\r\n\r\nthead.addEventListener('click', (e) => {\r\n  const target = e.target;\r\n\r\n  if (target.tagName === 'TH') {\r\n    sortBy = target.dataset.sortby;\r\n\r\n    if (sortBy === state.sort) {\r\n      if (state.sortDirection === 'asc') {\r\n        state.sortDirection = 'desc';\r\n      } else if (state.sortDirection === 'desc') {\r\n        state.sortDirection = 'asc';\r\n      }\r\n    } else {\r\n      state.sortDirection = 'asc';\r\n      state.sort = sortBy;\r\n    }\r\n\r\n    sortTable();\r\n  }\r\n});\r\n\r\nfunction sortBodyString(arr, childNumber) {\r\n  return arr.sort((childA, childB) =>\r\n    childA.children[childNumber].innerText.localeCompare(\r\n      childB.children[childNumber].innerText\r\n    )\r\n  );\r\n}\r\n\r\nfunction sortBodyNumber(arr, childNumber, parsePattern) {\r\n  return arr.sort(\r\n    (childA, childB) =>\r\n      parsePattern(childA.children[childNumber].innerText)\r\n      - parsePattern(childB.children[childNumber].innerText)\r\n  );\r\n}\r\n\r\nfunction formatSalary(salary) {\r\n  let salaryCopy = salary;\n\r\n  salaryCopy = salaryCopy.replace(/\\$|,/g, '');\r\n\r\n  salaryCopy = Number(salaryCopy).toLocaleString('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n\r\n  return salaryCopy.replace(/\\.00$/, '');\r\n}\r\n\r\ntbody.addEventListener('click', (e) => {\r\n  state.selectedPerson = e.target.closest('tr');\r\n\r\n  [...tbody.children].forEach((element) => {\r\n    if (!state.selectedPerson) {\r\n      return;\r\n    }\r\n\r\n    if (element === state.selectedPerson) {\r\n      element.classList.add('active');\r\n    } else {\r\n      element.classList.remove('active');\r\n    }\r\n  });\r\n});\r\n\r\ntbody.addEventListener('dblclick', (e) => {\r\n  if (e.target.tagName) {\r\n    const target = e.target;\r\n\r\n    state.editedField = target;\r\n\r\n    let value = target.innerText;\r\n\r\n    target.innerHTML = '';\r\n\r\n    const input = document.createElement('input');\r\n\r\n    input.value = value;\r\n    input.classList.add('cell-input');\r\n\r\n    target.append(input);\r\n    input.focus();\r\n\r\n    const salaryField = target === target.parentElement.lastElementChild;\r\n\r\n    const saveValue = () => {\r\n      const inputParent = input.parentElement;\r\n\r\n      if (inputParent.tagName === 'TD') {\r\n        value = input.value !== '' ? input.value : value;\r\n\r\n        if (salaryField) {\r\n          value = formatSalary(value);\r\n        }\r\n\r\n        inputParent.innerText = value;\r\n\r\n        if (state.sort) {\r\n          sortTable();\r\n        }\r\n      }\r\n    };\r\n\r\n    input.addEventListener('blur', () => {\r\n      saveValue();\r\n    });\r\n\r\n    input.addEventListener('keypress', (ev) => {\r\n      if (ev.key === 'Enter') {\r\n        saveValue();\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nconst newEmployeeForm = document.createElement('form');\r\n\r\nnewEmployeeForm.classList.add('new-employee-form');\r\nnewEmployeeForm.method = 'GET';\r\nnewEmployeeForm.action = '/';\r\n\r\nnewEmployeeForm.innerHTML = `\r\n    <label>\r\n      Name: \r\n      <input \r\n        name=\"name\" \r\n        type=\"text\" \r\n        data-qa=\"name\" \r\n        required\r\n      >\r\n    </label>\r\n\r\n    <label>\r\n      Position: \r\n      <input \r\n        name=\"position\" \r\n        type=\"text\" \r\n        data-qa=\"position\" \r\n        required\r\n      >\r\n    </label>\r\n    \r\n    <label>\r\n      Office:\r\n      <select \r\n        name=\"office\"\r\n        data-qa=\"office\"\r\n        required  \r\n      >  \r\n        ${officeOptions.map(\r\n    (option) =>\r\n      `<option value=\"${option.toLowerCase()}\">${option}</option>`\r\n  )}\r\n      </select>\r\n    </label>\r\n\r\n    <label>\r\n      Age: \r\n      <input \r\n        name=\"age\" \r\n        type=\"number\" \r\n        data-qa=\"age\" \r\n        required\r\n      >\r\n    </label>\r\n\r\n    <label>\r\n      Salary: \r\n      <input \r\n        name=\"salary\" \r\n        type=\"number\" \r\n        data-qa=\"salary\" \r\n        required\r\n      >\r\n    </label>\r\n\r\n    <button type=\"submit\"> \r\n      Save to table\r\n    </button>\r\n`;\r\n\r\nnewEmployeeForm.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n\r\n  const data = new FormData(newEmployeeForm);\r\n  const formData = Object.fromEntries(data.entries());\r\n\r\n  const { age, name: nameValue, salary } = formData;\r\n\r\n  if (age < 18) {\r\n    state.notifications.error.push(\r\n      'The data is invalid: minimum value for age is 18'\r\n    );\r\n  }\r\n\r\n  if (age > 90) {\r\n    state.notifications.error.push(\r\n      'The data is invalid: maximum value for age is 90'\r\n    );\r\n  }\r\n\r\n  if (nameValue.length < 4) {\r\n    state.notifications.error.push(\r\n      'The data is invalid: name should have at least 4 letters'\r\n    );\r\n  }\r\n\r\n  if (salary < 0) {\r\n    state.notifications.error.push(\r\n      'The data is invalid: salaty cannot be a negative number'\r\n    );\r\n  }\r\n\r\n  formData.salary = formatSalary(salary);\r\n\r\n  if (state.notifications.error.length) {\r\n    renderNotifications();\r\n\r\n    return;\r\n  }\r\n\r\n  const tr = document.createElement('tr');\r\n\r\n  Object.values(formData).forEach((value) => {\r\n    const td = document.createElement('td');\r\n\r\n    td.innerText = value;\r\n    tr.append(td);\r\n  });\r\n\r\n  tbody.append(tr);\r\n\r\n  state.notifications.success.push('New employee hab been successfully added');\r\n\r\n  newEmployeeForm.reset();\r\n  renderNotifications();\r\n});\r\n\r\ndocument.body.append(newEmployeeForm);\r\n\r\nfunction renderNotifications() {\r\n  const stateNotifications = Object.entries(state.notifications);\r\n\r\n  for (const [key, value] of stateNotifications) {\r\n    for (const message of value) {\r\n      const notofication = document.createElement('div');\r\n\r\n      notofication.classList.add(key);\r\n      notofication.classList.add('notification');\r\n      notofication.innerText = message;\r\n      document.body.append(notofication);\r\n\r\n      setTimeout(() => {\r\n        document.body.removeChild(notofication);\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  state.notifications.error = [];\r\n  state.notifications.success = [];\r\n};\r\n"]}